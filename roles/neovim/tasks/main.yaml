---
- name: Dependencies
  ansible.builtin.package:
    name:
      - build-essential
      - curl
      - ninja-build
      - gettext
      - unzip
      - gzip
      - cmake
    state: latest
  become: yes

- name: Copy Installer
  ansible.builtin.template:
    dest: "{{ ansible_user_dir }}/tree-sitter-installer.sh"
    src: "tree-sitter-installer.sh.j2"
    mode: "0755"

- name: Install Tree-sitter
  ansible.builtin.shell:
    cmd: "{{ ansible_user_dir }}/tree-sitter-installer.sh"

- name: Cleanup
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/tree-sitter-installer.sh"
    state: absent

- name: Clone
  ansible.builtin.git:
    clone: yes
    depth: 1
    dest: "{{ ansible_user_dir }}/Development/repository/github.com/neovim/neovim"
    force: yes
    repo: https://github.com/neovim/neovim.git
    update: yes
    version: "{{ neovim_version | default('master') }}"
  register: clone

- name: Build
  make:
    chdir: "{{ ansible_user_dir }}/Development/repository/github.com/neovim/neovim"
    params:
      CMAKE_BUILD_TYPE: RelWithDebInfo
  when: clone.changed

- name: Install
  make:
    chdir: "{{ ansible_user_dir }}/Development/repository/github.com/neovim/neovim"
    target: install
  become: yes
  when: clone.changed

- name: Remove build folder
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/Development/repository/github.com/neovim/neovim/build"
    state: absent
  become: yes

- name: Config folder
  ansible.builtin.file:
    mode: "0755"
    path: "{{ ansible_user_dir }}/.config/nvim"
    state: directory

- name: Copy init.lua
  ansible.builtin.copy:
    dest: "{{ ansible_user_dir }}/.config/nvim/init.lua"
    src: "init.lua"

- name: Copy modules
  ansible.builtin.copy:
    dest: "{{ ansible_user_dir }}/.config/nvim/lua"
    src: "lua/"
